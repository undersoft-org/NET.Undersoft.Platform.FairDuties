@page "/users"

<PageTitle>Users</PageTitle>

@using Undersoft.ODP.Api
@using RadicalR
@using System.Instant
@using System.Series
@inject HttpClient Http
@inject IRadicalr ultimatr
@inject IRemoteRepository<IReportStore, Member> userRepository

<h1>Users</h1>

<p>Users Grid.</p>

@if (users == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <EditForm>

    </EditForm>
    <table class="table">
        <thead>
            <tr>
                <th>Id</th>
                <th>PhoneNumber</th>
                <th>UserName</th>
                <th>Email</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var user in users)
            {
                <tr>
                    <td>
                        @user.Id
                    </td>
                    <td>@user.PhoneNumber</td>
                    <td>@user.Name</td>
                    <td>@user.Email</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private IDeck<Member>? users;
    //private IRubrics rubrics;
    //private UserBasicDto[] users;

    protected override async Task OnInitializedAsync()
    {

        users = await userRepository.Get();
        //users = await Task.Run(() => ultimatr.Load<IEntryStore, User>());
        //users = await Http.GetFromJsonAsync<UserBasicDto[]>("https://localhost:44510/Users");
    }
}
