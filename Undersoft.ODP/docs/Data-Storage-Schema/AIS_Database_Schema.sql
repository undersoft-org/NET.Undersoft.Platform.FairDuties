-- This script was generated by a beta version of the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public."ApiResourceClaims"
(
    "Id" integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    "Type" character varying(200) COLLATE pg_catalog."default" NOT NULL,
    "ApiResourceId" integer NOT NULL,
    CONSTRAINT "PK_ApiResourceClaims" PRIMARY KEY ("Id")
);

CREATE TABLE IF NOT EXISTS public."ApiResourceProperties"
(
    "Id" integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    "Key" character varying(250) COLLATE pg_catalog."default" NOT NULL,
    "Value" character varying(2000) COLLATE pg_catalog."default" NOT NULL,
    "ApiResourceId" integer NOT NULL,
    CONSTRAINT "PK_ApiResourceProperties" PRIMARY KEY ("Id")
);

CREATE TABLE IF NOT EXISTS public."ApiResourceScopes"
(
    "Id" integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    "Scope" character varying(200) COLLATE pg_catalog."default" NOT NULL,
    "ApiResourceId" integer NOT NULL,
    CONSTRAINT "PK_ApiResourceScopes" PRIMARY KEY ("Id")
);

CREATE TABLE IF NOT EXISTS public."ApiResourceSecrets"
(
    "Id" integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    "Description" character varying(1000) COLLATE pg_catalog."default",
    "Value" character varying(4000) COLLATE pg_catalog."default" NOT NULL,
    "Expiration" timestamp without time zone,
    "Type" character varying(250) COLLATE pg_catalog."default" NOT NULL,
    "Created" timestamp without time zone NOT NULL,
    "ApiResourceId" integer NOT NULL,
    CONSTRAINT "PK_ApiResourceSecrets" PRIMARY KEY ("Id")
);

CREATE TABLE IF NOT EXISTS public."ApiResources"
(
    "Id" integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    "Enabled" boolean NOT NULL,
    "Name" character varying(200) COLLATE pg_catalog."default" NOT NULL,
    "DisplayName" character varying(200) COLLATE pg_catalog."default",
    "Description" character varying(1000) COLLATE pg_catalog."default",
    "Created" timestamp without time zone NOT NULL,
    "Updated" timestamp without time zone,
    "LastAccessed" timestamp without time zone,
    "NonEditable" boolean NOT NULL,
    "AllowedAccessTokenSigningAlgorithms" character varying(100) COLLATE pg_catalog."default",
    "ShowInDiscoveryDocument" boolean NOT NULL DEFAULT false,
    CONSTRAINT "PK_ApiResources" PRIMARY KEY ("Id")
);

CREATE TABLE IF NOT EXISTS public."ApiScopeClaims"
(
    "Id" integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    "Type" character varying(200) COLLATE pg_catalog."default" NOT NULL,
    "ScopeId" integer NOT NULL DEFAULT 0,
    CONSTRAINT "PK_ApiScopeClaims" PRIMARY KEY ("Id")
);

CREATE TABLE IF NOT EXISTS public."ApiScopeProperties"
(
    "Id" integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    "Key" character varying(250) COLLATE pg_catalog."default" NOT NULL,
    "Value" character varying(2000) COLLATE pg_catalog."default" NOT NULL,
    "ScopeId" integer NOT NULL,
    CONSTRAINT "PK_ApiScopeProperties" PRIMARY KEY ("Id")
);

CREATE TABLE IF NOT EXISTS public."ApiScopes"
(
    "Id" integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    "Name" character varying(200) COLLATE pg_catalog."default" NOT NULL,
    "DisplayName" character varying(200) COLLATE pg_catalog."default",
    "Description" character varying(1000) COLLATE pg_catalog."default",
    "Required" boolean NOT NULL,
    "Emphasize" boolean NOT NULL,
    "ShowInDiscoveryDocument" boolean NOT NULL,
    "Enabled" boolean NOT NULL DEFAULT false,
    CONSTRAINT "PK_ApiScopes" PRIMARY KEY ("Id")
);

CREATE TABLE IF NOT EXISTS public."AuditLog"
(
    "Id" bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    "Event" text COLLATE pg_catalog."default",
    "Source" text COLLATE pg_catalog."default",
    "Category" text COLLATE pg_catalog."default",
    "SubjectIdentifier" text COLLATE pg_catalog."default",
    "SubjectName" text COLLATE pg_catalog."default",
    "SubjectType" text COLLATE pg_catalog."default",
    "SubjectAdditionalData" text COLLATE pg_catalog."default",
    "Action" text COLLATE pg_catalog."default",
    "Data" text COLLATE pg_catalog."default",
    "Created" timestamp without time zone NOT NULL,
    CONSTRAINT "PK_AuditLog" PRIMARY KEY ("Id")
);

CREATE TABLE IF NOT EXISTS public."ClientClaims"
(
    "Id" integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    "Type" character varying(250) COLLATE pg_catalog."default" NOT NULL,
    "Value" character varying(250) COLLATE pg_catalog."default" NOT NULL,
    "ClientId" integer NOT NULL,
    CONSTRAINT "PK_ClientClaims" PRIMARY KEY ("Id")
);

CREATE TABLE IF NOT EXISTS public."ClientCorsOrigins"
(
    "Id" integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    "Origin" character varying(150) COLLATE pg_catalog."default" NOT NULL,
    "ClientId" integer NOT NULL,
    CONSTRAINT "PK_ClientCorsOrigins" PRIMARY KEY ("Id")
);

CREATE TABLE IF NOT EXISTS public."ClientGrantTypes"
(
    "Id" integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    "GrantType" character varying(250) COLLATE pg_catalog."default" NOT NULL,
    "ClientId" integer NOT NULL,
    CONSTRAINT "PK_ClientGrantTypes" PRIMARY KEY ("Id")
);

CREATE TABLE IF NOT EXISTS public."ClientIdPRestrictions"
(
    "Id" integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    "Provider" character varying(200) COLLATE pg_catalog."default" NOT NULL,
    "ClientId" integer NOT NULL,
    CONSTRAINT "PK_ClientIdPRestrictions" PRIMARY KEY ("Id")
);

CREATE TABLE IF NOT EXISTS public."ClientPostLogoutRedirectUris"
(
    "Id" integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    "PostLogoutRedirectUri" character varying(2000) COLLATE pg_catalog."default" NOT NULL,
    "ClientId" integer NOT NULL,
    CONSTRAINT "PK_ClientPostLogoutRedirectUris" PRIMARY KEY ("Id")
);

CREATE TABLE IF NOT EXISTS public."ClientProperties"
(
    "Id" integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    "Key" character varying(250) COLLATE pg_catalog."default" NOT NULL,
    "Value" character varying(2000) COLLATE pg_catalog."default" NOT NULL,
    "ClientId" integer NOT NULL,
    CONSTRAINT "PK_ClientProperties" PRIMARY KEY ("Id")
);

CREATE TABLE IF NOT EXISTS public."ClientRedirectUris"
(
    "Id" integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    "RedirectUri" character varying(2000) COLLATE pg_catalog."default" NOT NULL,
    "ClientId" integer NOT NULL,
    CONSTRAINT "PK_ClientRedirectUris" PRIMARY KEY ("Id")
);

CREATE TABLE IF NOT EXISTS public."ClientScopes"
(
    "Id" integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    "Scope" character varying(200) COLLATE pg_catalog."default" NOT NULL,
    "ClientId" integer NOT NULL,
    CONSTRAINT "PK_ClientScopes" PRIMARY KEY ("Id")
);

CREATE TABLE IF NOT EXISTS public."ClientSecrets"
(
    "Id" integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    "Description" character varying(2000) COLLATE pg_catalog."default",
    "Value" character varying(4000) COLLATE pg_catalog."default" NOT NULL,
    "Expiration" timestamp without time zone,
    "Type" character varying(250) COLLATE pg_catalog."default" NOT NULL,
    "Created" timestamp without time zone NOT NULL,
    "ClientId" integer NOT NULL,
    CONSTRAINT "PK_ClientSecrets" PRIMARY KEY ("Id")
);

CREATE TABLE IF NOT EXISTS public."Clients"
(
    "Id" integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    "Enabled" boolean NOT NULL,
    "ClientId" character varying(200) COLLATE pg_catalog."default" NOT NULL,
    "ProtocolType" character varying(200) COLLATE pg_catalog."default" NOT NULL,
    "RequireClientSecret" boolean NOT NULL,
    "ClientName" character varying(200) COLLATE pg_catalog."default",
    "Description" character varying(1000) COLLATE pg_catalog."default",
    "ClientUri" character varying(2000) COLLATE pg_catalog."default",
    "LogoUri" character varying(2000) COLLATE pg_catalog."default",
    "RequireConsent" boolean NOT NULL,
    "AllowRememberConsent" boolean NOT NULL,
    "AlwaysIncludeUserClaimsInIdToken" boolean NOT NULL,
    "RequirePkce" boolean NOT NULL,
    "AllowPlainTextPkce" boolean NOT NULL,
    "AllowAccessTokensViaBrowser" boolean NOT NULL,
    "FrontChannelLogoutUri" character varying(2000) COLLATE pg_catalog."default",
    "FrontChannelLogoutSessionRequired" boolean NOT NULL,
    "BackChannelLogoutUri" character varying(2000) COLLATE pg_catalog."default",
    "BackChannelLogoutSessionRequired" boolean NOT NULL,
    "AllowOfflineAccess" boolean NOT NULL,
    "IdentityTokenLifetime" integer NOT NULL,
    "AccessTokenLifetime" integer NOT NULL,
    "AuthorizationCodeLifetime" integer NOT NULL,
    "ConsentLifetime" integer,
    "AbsoluteRefreshTokenLifetime" integer NOT NULL,
    "SlidingRefreshTokenLifetime" integer NOT NULL,
    "RefreshTokenUsage" integer NOT NULL,
    "UpdateAccessTokenClaimsOnRefresh" boolean NOT NULL,
    "RefreshTokenExpiration" integer NOT NULL,
    "AccessTokenType" integer NOT NULL,
    "EnableLocalLogin" boolean NOT NULL,
    "IncludeJwtId" boolean NOT NULL,
    "AlwaysSendClientClaims" boolean NOT NULL,
    "ClientClaimsPrefix" character varying(200) COLLATE pg_catalog."default",
    "PairWiseSubjectSalt" character varying(200) COLLATE pg_catalog."default",
    "Created" timestamp without time zone NOT NULL,
    "Updated" timestamp without time zone,
    "LastAccessed" timestamp without time zone,
    "UserSsoLifetime" integer,
    "UserCodeType" character varying(100) COLLATE pg_catalog."default",
    "DeviceCodeLifetime" integer NOT NULL,
    "NonEditable" boolean NOT NULL,
    "AllowedIdentityTokenSigningAlgorithms" character varying(100) COLLATE pg_catalog."default",
    "RequireRequestObject" boolean NOT NULL DEFAULT false,
    CONSTRAINT "PK_Clients" PRIMARY KEY ("Id")
);

CREATE TABLE IF NOT EXISTS public."DataProtectionKeys"
(
    "Id" integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    "FriendlyName" text COLLATE pg_catalog."default",
    "Xml" text COLLATE pg_catalog."default",
    CONSTRAINT "PK_DataProtectionKeys" PRIMARY KEY ("Id")
);

CREATE TABLE IF NOT EXISTS public."DeviceCodes"
(
    "UserCode" character varying(200) COLLATE pg_catalog."default" NOT NULL,
    "DeviceCode" character varying(200) COLLATE pg_catalog."default" NOT NULL,
    "SubjectId" character varying(200) COLLATE pg_catalog."default",
    "ClientId" character varying(200) COLLATE pg_catalog."default" NOT NULL,
    "CreationTime" timestamp without time zone NOT NULL,
    "Expiration" timestamp without time zone NOT NULL,
    "Data" character varying(50000) COLLATE pg_catalog."default" NOT NULL,
    "Description" character varying(200) COLLATE pg_catalog."default",
    "SessionId" character varying(100) COLLATE pg_catalog."default",
    CONSTRAINT "PK_DeviceCodes" PRIMARY KEY ("UserCode")
);

CREATE TABLE IF NOT EXISTS public."IdentityResourceClaims"
(
    "Id" integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    "Type" character varying(200) COLLATE pg_catalog."default" NOT NULL,
    "IdentityResourceId" integer NOT NULL,
    CONSTRAINT "PK_IdentityResourceClaims" PRIMARY KEY ("Id")
);

CREATE TABLE IF NOT EXISTS public."IdentityResourceProperties"
(
    "Id" integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    "Key" character varying(250) COLLATE pg_catalog."default" NOT NULL,
    "Value" character varying(2000) COLLATE pg_catalog."default" NOT NULL,
    "IdentityResourceId" integer NOT NULL,
    CONSTRAINT "PK_IdentityResourceProperties" PRIMARY KEY ("Id")
);

CREATE TABLE IF NOT EXISTS public."IdentityResources"
(
    "Id" integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    "Enabled" boolean NOT NULL,
    "Name" character varying(200) COLLATE pg_catalog."default" NOT NULL,
    "DisplayName" character varying(200) COLLATE pg_catalog."default",
    "Description" character varying(1000) COLLATE pg_catalog."default",
    "Required" boolean NOT NULL,
    "Emphasize" boolean NOT NULL,
    "ShowInDiscoveryDocument" boolean NOT NULL,
    "Created" timestamp without time zone NOT NULL,
    "Updated" timestamp without time zone,
    "NonEditable" boolean NOT NULL,
    CONSTRAINT "PK_IdentityResources" PRIMARY KEY ("Id")
);

CREATE TABLE IF NOT EXISTS public."Log"
(
    "Id" bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    "Message" text COLLATE pg_catalog."default",
    "MessageTemplate" text COLLATE pg_catalog."default",
    "Level" character varying(128) COLLATE pg_catalog."default",
    "TimeStamp" timestamp with time zone NOT NULL,
    "Exception" text COLLATE pg_catalog."default",
    "LogEvent" text COLLATE pg_catalog."default",
    "Properties" text COLLATE pg_catalog."default",
    CONSTRAINT "PK_Log" PRIMARY KEY ("Id")
);

CREATE TABLE IF NOT EXISTS public."PersistedGrants"
(
    "Key" character varying(200) COLLATE pg_catalog."default" NOT NULL,
    "Type" character varying(50) COLLATE pg_catalog."default" NOT NULL,
    "SubjectId" character varying(200) COLLATE pg_catalog."default",
    "ClientId" character varying(200) COLLATE pg_catalog."default" NOT NULL,
    "CreationTime" timestamp without time zone NOT NULL,
    "Expiration" timestamp without time zone,
    "Data" character varying(50000) COLLATE pg_catalog."default" NOT NULL,
    "ConsumedTime" timestamp without time zone,
    "Description" character varying(200) COLLATE pg_catalog."default",
    "SessionId" character varying(100) COLLATE pg_catalog."default",
    CONSTRAINT "PK_PersistedGrants" PRIMARY KEY ("Key")
);

CREATE TABLE IF NOT EXISTS public."RoleClaims"
(
    "Id" integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    "RoleId" text COLLATE pg_catalog."default" NOT NULL,
    "ClaimType" text COLLATE pg_catalog."default",
    "ClaimValue" text COLLATE pg_catalog."default",
    CONSTRAINT "PK_RoleClaims" PRIMARY KEY ("Id")
);

CREATE TABLE IF NOT EXISTS public."Roles"
(
    "Id" text COLLATE pg_catalog."default" NOT NULL,
    "Name" character varying(256) COLLATE pg_catalog."default",
    "NormalizedName" character varying(256) COLLATE pg_catalog."default",
    "ConcurrencyStamp" text COLLATE pg_catalog."default",
    CONSTRAINT "PK_Roles" PRIMARY KEY ("Id")
);

CREATE TABLE IF NOT EXISTS public."UserClaims"
(
    "Id" integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    "UserId" text COLLATE pg_catalog."default" NOT NULL,
    "ClaimType" text COLLATE pg_catalog."default",
    "ClaimValue" text COLLATE pg_catalog."default",
    CONSTRAINT "PK_UserClaims" PRIMARY KEY ("Id")
);

CREATE TABLE IF NOT EXISTS public."UserLogins"
(
    "LoginProvider" text COLLATE pg_catalog."default" NOT NULL,
    "ProviderKey" text COLLATE pg_catalog."default" NOT NULL,
    "ProviderDisplayName" text COLLATE pg_catalog."default",
    "UserId" text COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT "PK_UserLogins" PRIMARY KEY ("LoginProvider", "ProviderKey")
);

CREATE TABLE IF NOT EXISTS public."UserRoles"
(
    "UserId" text COLLATE pg_catalog."default" NOT NULL,
    "RoleId" text COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT "PK_UserRoles" PRIMARY KEY ("UserId", "RoleId")
);

CREATE TABLE IF NOT EXISTS public."UserTokens"
(
    "UserId" text COLLATE pg_catalog."default" NOT NULL,
    "LoginProvider" text COLLATE pg_catalog."default" NOT NULL,
    "Name" text COLLATE pg_catalog."default" NOT NULL,
    "Value" text COLLATE pg_catalog."default",
    CONSTRAINT "PK_UserTokens" PRIMARY KEY ("UserId", "LoginProvider", "Name")
);

CREATE TABLE IF NOT EXISTS public."Users"
(
    "Id" text COLLATE pg_catalog."default" NOT NULL,
    "UserName" character varying(256) COLLATE pg_catalog."default",
    "NormalizedUserName" character varying(256) COLLATE pg_catalog."default",
    "Email" character varying(256) COLLATE pg_catalog."default",
    "NormalizedEmail" character varying(256) COLLATE pg_catalog."default",
    "EmailConfirmed" boolean NOT NULL,
    "PasswordHash" text COLLATE pg_catalog."default",
    "SecurityStamp" text COLLATE pg_catalog."default",
    "ConcurrencyStamp" text COLLATE pg_catalog."default",
    "PhoneNumber" text COLLATE pg_catalog."default",
    "PhoneNumberConfirmed" boolean NOT NULL,
    "TwoFactorEnabled" boolean NOT NULL,
    "LockoutEnd" timestamp with time zone,
    "LockoutEnabled" boolean NOT NULL,
    "AccessFailedCount" integer NOT NULL,
    CONSTRAINT "PK_Users" PRIMARY KEY ("Id")
);

CREATE TABLE IF NOT EXISTS public."__EFMigrationsHistory"
(
    "MigrationId" character varying(150) COLLATE pg_catalog."default" NOT NULL,
    "ProductVersion" character varying(32) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY ("MigrationId")
);

ALTER TABLE IF EXISTS public."ApiResourceClaims"
    ADD CONSTRAINT "FK_ApiResourceClaims_ApiResources_ApiResourceId" FOREIGN KEY ("ApiResourceId")
    REFERENCES public."ApiResources" ("Id") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;
CREATE INDEX IF NOT EXISTS "IX_ApiResourceClaims_ApiResourceId"
    ON public."ApiResourceClaims"("ApiResourceId");


ALTER TABLE IF EXISTS public."ApiResourceProperties"
    ADD CONSTRAINT "FK_ApiResourceProperties_ApiResources_ApiResourceId" FOREIGN KEY ("ApiResourceId")
    REFERENCES public."ApiResources" ("Id") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;
CREATE INDEX IF NOT EXISTS "IX_ApiResourceProperties_ApiResourceId"
    ON public."ApiResourceProperties"("ApiResourceId");


ALTER TABLE IF EXISTS public."ApiResourceScopes"
    ADD CONSTRAINT "FK_ApiResourceScopes_ApiResources_ApiResourceId" FOREIGN KEY ("ApiResourceId")
    REFERENCES public."ApiResources" ("Id") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;
CREATE INDEX IF NOT EXISTS "IX_ApiResourceScopes_ApiResourceId"
    ON public."ApiResourceScopes"("ApiResourceId");


ALTER TABLE IF EXISTS public."ApiResourceSecrets"
    ADD CONSTRAINT "FK_ApiResourceSecrets_ApiResources_ApiResourceId" FOREIGN KEY ("ApiResourceId")
    REFERENCES public."ApiResources" ("Id") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;
CREATE INDEX IF NOT EXISTS "IX_ApiResourceSecrets_ApiResourceId"
    ON public."ApiResourceSecrets"("ApiResourceId");


ALTER TABLE IF EXISTS public."ApiScopeClaims"
    ADD CONSTRAINT "FK_ApiScopeClaims_ApiScopes_ScopeId" FOREIGN KEY ("ScopeId")
    REFERENCES public."ApiScopes" ("Id") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;
CREATE INDEX IF NOT EXISTS "IX_ApiScopeClaims_ScopeId"
    ON public."ApiScopeClaims"("ScopeId");


ALTER TABLE IF EXISTS public."ApiScopeProperties"
    ADD CONSTRAINT "FK_ApiScopeProperties_ApiScopes_ScopeId" FOREIGN KEY ("ScopeId")
    REFERENCES public."ApiScopes" ("Id") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;
CREATE INDEX IF NOT EXISTS "IX_ApiScopeProperties_ScopeId"
    ON public."ApiScopeProperties"("ScopeId");


ALTER TABLE IF EXISTS public."ClientClaims"
    ADD CONSTRAINT "FK_ClientClaims_Clients_ClientId" FOREIGN KEY ("ClientId")
    REFERENCES public."Clients" ("Id") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;
CREATE INDEX IF NOT EXISTS "IX_ClientClaims_ClientId"
    ON public."ClientClaims"("ClientId");


ALTER TABLE IF EXISTS public."ClientCorsOrigins"
    ADD CONSTRAINT "FK_ClientCorsOrigins_Clients_ClientId" FOREIGN KEY ("ClientId")
    REFERENCES public."Clients" ("Id") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;
CREATE INDEX IF NOT EXISTS "IX_ClientCorsOrigins_ClientId"
    ON public."ClientCorsOrigins"("ClientId");


ALTER TABLE IF EXISTS public."ClientGrantTypes"
    ADD CONSTRAINT "FK_ClientGrantTypes_Clients_ClientId" FOREIGN KEY ("ClientId")
    REFERENCES public."Clients" ("Id") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;
CREATE INDEX IF NOT EXISTS "IX_ClientGrantTypes_ClientId"
    ON public."ClientGrantTypes"("ClientId");


ALTER TABLE IF EXISTS public."ClientIdPRestrictions"
    ADD CONSTRAINT "FK_ClientIdPRestrictions_Clients_ClientId" FOREIGN KEY ("ClientId")
    REFERENCES public."Clients" ("Id") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;
CREATE INDEX IF NOT EXISTS "IX_ClientIdPRestrictions_ClientId"
    ON public."ClientIdPRestrictions"("ClientId");


ALTER TABLE IF EXISTS public."ClientPostLogoutRedirectUris"
    ADD CONSTRAINT "FK_ClientPostLogoutRedirectUris_Clients_ClientId" FOREIGN KEY ("ClientId")
    REFERENCES public."Clients" ("Id") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;
CREATE INDEX IF NOT EXISTS "IX_ClientPostLogoutRedirectUris_ClientId"
    ON public."ClientPostLogoutRedirectUris"("ClientId");


ALTER TABLE IF EXISTS public."ClientProperties"
    ADD CONSTRAINT "FK_ClientProperties_Clients_ClientId" FOREIGN KEY ("ClientId")
    REFERENCES public."Clients" ("Id") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;
CREATE INDEX IF NOT EXISTS "IX_ClientProperties_ClientId"
    ON public."ClientProperties"("ClientId");


ALTER TABLE IF EXISTS public."ClientRedirectUris"
    ADD CONSTRAINT "FK_ClientRedirectUris_Clients_ClientId" FOREIGN KEY ("ClientId")
    REFERENCES public."Clients" ("Id") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;
CREATE INDEX IF NOT EXISTS "IX_ClientRedirectUris_ClientId"
    ON public."ClientRedirectUris"("ClientId");


ALTER TABLE IF EXISTS public."ClientScopes"
    ADD CONSTRAINT "FK_ClientScopes_Clients_ClientId" FOREIGN KEY ("ClientId")
    REFERENCES public."Clients" ("Id") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;
CREATE INDEX IF NOT EXISTS "IX_ClientScopes_ClientId"
    ON public."ClientScopes"("ClientId");


ALTER TABLE IF EXISTS public."ClientSecrets"
    ADD CONSTRAINT "FK_ClientSecrets_Clients_ClientId" FOREIGN KEY ("ClientId")
    REFERENCES public."Clients" ("Id") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;
CREATE INDEX IF NOT EXISTS "IX_ClientSecrets_ClientId"
    ON public."ClientSecrets"("ClientId");


ALTER TABLE IF EXISTS public."IdentityResourceClaims"
    ADD CONSTRAINT "FK_IdentityResourceClaims_IdentityResources_IdentityResourceId" FOREIGN KEY ("IdentityResourceId")
    REFERENCES public."IdentityResources" ("Id") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;
CREATE INDEX IF NOT EXISTS "IX_IdentityResourceClaims_IdentityResourceId"
    ON public."IdentityResourceClaims"("IdentityResourceId");


ALTER TABLE IF EXISTS public."IdentityResourceProperties"
    ADD CONSTRAINT "FK_IdentityResourceProperties_IdentityResources_IdentityResour~" FOREIGN KEY ("IdentityResourceId")
    REFERENCES public."IdentityResources" ("Id") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;
CREATE INDEX IF NOT EXISTS "IX_IdentityResourceProperties_IdentityResourceId"
    ON public."IdentityResourceProperties"("IdentityResourceId");


ALTER TABLE IF EXISTS public."RoleClaims"
    ADD CONSTRAINT "FK_RoleClaims_Roles_RoleId" FOREIGN KEY ("RoleId")
    REFERENCES public."Roles" ("Id") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;
CREATE INDEX IF NOT EXISTS "IX_RoleClaims_RoleId"
    ON public."RoleClaims"("RoleId");


ALTER TABLE IF EXISTS public."UserClaims"
    ADD CONSTRAINT "FK_UserClaims_Users_UserId" FOREIGN KEY ("UserId")
    REFERENCES public."Users" ("Id") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;
CREATE INDEX IF NOT EXISTS "IX_UserClaims_UserId"
    ON public."UserClaims"("UserId");


ALTER TABLE IF EXISTS public."UserLogins"
    ADD CONSTRAINT "FK_UserLogins_Users_UserId" FOREIGN KEY ("UserId")
    REFERENCES public."Users" ("Id") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;
CREATE INDEX IF NOT EXISTS "IX_UserLogins_UserId"
    ON public."UserLogins"("UserId");


ALTER TABLE IF EXISTS public."UserRoles"
    ADD CONSTRAINT "FK_UserRoles_Roles_RoleId" FOREIGN KEY ("RoleId")
    REFERENCES public."Roles" ("Id") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;
CREATE INDEX IF NOT EXISTS "IX_UserRoles_RoleId"
    ON public."UserRoles"("RoleId");


ALTER TABLE IF EXISTS public."UserRoles"
    ADD CONSTRAINT "FK_UserRoles_Users_UserId" FOREIGN KEY ("UserId")
    REFERENCES public."Users" ("Id") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public."UserTokens"
    ADD CONSTRAINT "FK_UserTokens_Users_UserId" FOREIGN KEY ("UserId")
    REFERENCES public."Users" ("Id") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;

END;